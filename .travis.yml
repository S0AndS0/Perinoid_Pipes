## Authors note: add "[ci skip]" or "[skip ci]" in commit message to
##  disable building for the next push.
## Required for apt-get commands within '.travis-ci/before_install_depends.sh'
##  & cp commands within '.travis-ci/install.sh' only, everything else should
##  be runing as "${USER}" for build processes.
sudo: required
## Settings for git
git:
 depth: 3
 branch: master
## Operating systems to test on
os:
 - linux
## Settings for language that travis-ci.org will test with
#language:
# - bash
## Atempt to limit build enviroment to only what is required
language: bash
matrix:
 include:
 - bash
## Custom setup prior to testing project, install dependencies & configure
##  The first installs dependancies via apt-get and uses sudo/root level
##  permissions, this should be the only build script that requires them.
before_install:
 - chmod +x .travis-ci/before_install_depends.sh
 - .travis-ci/before_install_depends.sh
## Steps for successful install once dependencies are met. Simply copies the
##  main script of this project to common install path and runs '--help'
##  command line option against it. Currently passing and operating correctly.
install:
 - chmod +x .travis-ci/install.sh
 - .travis-ci/install.sh
## Steps to complete prior to running further tests.
##  The first sets up temperary passphrase file as well as GPG key pare.
##  The second test the new key pare by encrypting a string as well as
##  decrypting the test string and reporting on if the decrypted file contence
##  matches the original test string. Currently all are passing and operating
##  corectly.
before_script:
 - chmod +x .travis-ci/before_script_gen_key.sh
 - .travis-ci/before_script_gen_key.sh
 - chmod +x .travis-ci/before_script_test_key.sh
 - .travis-ci/before_script_test_key.sh
## Run tests that report 'Passing' or 'Failing' build states
## - Run main script encryption tests. This will start the main script with the
##  internal listening loop in the background, then write to the related named
##  pipe file a few sudo-random lines of data to process before sending the
##  default quit string.
## - Run helper script with options to decrypt the multi-block/message file
##  that the previous script encrypted and appended to.
## - Run helper decryption again but this time test features of searching
##  decrypted output prior to saving to a file. This is usefull for saving
##  space for limited resources bound devices.
## - Run version two of main script encryption/decryption tests
##  this effectivly bundles both main script and decryption
##  helper script operations into one script that can do either.
script:
 - chmod +x .travis-ci/script_encrypt.sh
 - .travis-ci/script_encrypt.sh
 - chmod +x .travis-ci/script_decrypt.sh
 - .travis-ci/script_decrypt.sh
 - chmod +x .travis-ci/test_search_script_decrypt.sh
 - .travis-ci/test_search_script_decrypt.sh
 - chmod +x .travis-ci/script_encrypt_copy.sh
 - .travis-ci/script_encrypt_copy.sh
 - chmod u+x .travis-ci/version_two_tests.sh
 - .travis-ci/version_two_tests.sh
## Setps to complete after success or falure
## - Run version two script with padding and/or other experomental options
#after_success:
# - chmod u+x .travis-ci/version_two_second_tests.sh
# - .travis-ci/version_two_second_tests.sh
# - chmod +x .travis-ci/script_decrypt_copy.sh
# - .travis-ci/script_decrypt_copy.sh
#after_failure:
## Steps to run for deployment of build if any
#before_deploy:
#deploy:
#after_deploy:
## Steps to run when script and deployment is finished; cleanup?
#after_script:
## Note above tricks for chmoding the scripts prior to execution where found
##  at: http://stackoverflow.com/a/33820642/2632107
